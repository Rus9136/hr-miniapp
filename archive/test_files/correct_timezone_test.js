const db = require('./backend/database_pg');

async function correctTimezoneTest() {
    try {
        console.log('üïê –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–æ–Ω—ã...\n');
        
        const apiTime = "2025-05-01 09:04:42";
        console.log(`–ò—Å—Ö–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è –∏–∑ API: ${apiTime}`);
        
        // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–±: —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –∫–∞–∫ –º–µ—Å—Ç–Ω–æ–µ –≤—Ä–µ–º—è –≤ –ê–ª–º–∞—Ç—ã
        // PostgreSQL –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ—Ç —ç—Ç–æ –∫–∞–∫ –≤—Ä–µ–º—è –≤ —Ç–µ–∫—É—â–µ–π timezone (Asia/Almaty)
        await db.query('DELETE FROM time_events WHERE employee_number = \'TEST-CORRECT\'');
        
        // –í—Å—Ç–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –∫–∞–∫ timestamp –±–µ–∑ timezone, PostgreSQL –ø—Ä–∏–º–µ–Ω–∏—Ç Asia/Almaty
        await db.query(`
            INSERT INTO time_events (employee_number, object_code, event_datetime, event_type)
            VALUES ($1, $2, $3::timestamp AT TIME ZONE 'Asia/Almaty', $4)
        `, ['TEST-CORRECT', '5045', apiTime, '1']);
        
        // –ß–∏—Ç–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        const result = await db.query(`
            SELECT 
                event_datetime,
                event_datetime AT TIME ZONE 'Asia/Almaty' as local_time
            FROM time_events 
            WHERE employee_number = 'TEST-CORRECT'
        `);
        
        if (result.rows.length > 0) {
            const row = result.rows[0];
            console.log(`–í—Ä–µ–º—è –≤ –ë–î: ${row.event_datetime}`);
            console.log(`–õ–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: ${row.local_time}`);
            
            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å—Ç—Ä–æ–∫—É
            const localStr = row.local_time.toISOString().slice(0, 19).replace('T', ' ');
            console.log(`–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ: ${localStr}`);
            
            console.log(`\n–°—Ä–∞–≤–Ω–µ–Ω–∏–µ:`);
            console.log(`API –≤—Ä–µ–º—è:        ${apiTime}`);
            console.log(`–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ:  ${localStr}`);
            console.log(`–°–æ–≤–ø–∞–¥–∞–µ—Ç: ${apiTime === localStr ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
        }
        
        // –û—á–∏—â–∞–µ–º
        await db.query('DELETE FROM time_events WHERE employee_number = \'TEST-CORRECT\'');
        
        console.log('\n--- –¢–ï–°–¢–ò–†–£–ï–ú –î–†–£–ì–û–ô –ü–û–î–•–û–î ---');
        
        // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥: —Å–æ–∑–¥–∞–µ–º TIMESTAMPTZ –Ω–∞–ø—Ä—è–º—É—é
        await db.query(`
            INSERT INTO time_events (employee_number, object_code, event_datetime, event_type)
            VALUES ($1, $2, ($3 || ' Asia/Almaty')::timestamptz, $4)
        `, ['TEST-CORRECT2', '5045', apiTime, '1']);
        
        const result2 = await db.query(`
            SELECT 
                event_datetime,
                event_datetime AT TIME ZONE 'Asia/Almaty' as local_time
            FROM time_events 
            WHERE employee_number = 'TEST-CORRECT2'
        `);
        
        if (result2.rows.length > 0) {
            const row = result2.rows[0];
            const localStr = row.local_time.toISOString().slice(0, 19).replace('T', ' ');
            console.log(`–ü–æ–¥—Ö–æ–¥ 2 - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ: ${localStr}`);
            console.log(`–°–æ–≤–ø–∞–¥–∞–µ—Ç: ${apiTime === localStr ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
        }
        
        // –û—á–∏—â–∞–µ–º
        await db.query('DELETE FROM time_events WHERE employee_number = \'TEST-CORRECT2\'');
        
        console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    } finally {
        process.exit(0);
    }
}

correctTimezoneTest();