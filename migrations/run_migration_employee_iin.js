const { Pool } = require('pg');

const pool = new Pool({
    host: process.env.DB_HOST || 'hr-postgres',
    port: process.env.DB_PORT || 5432,
    database: process.env.DB_NAME || 'hr_tracker',
    user: process.env.DB_USER || 'hr_user',
    password: process.env.DB_PASSWORD || 'hr_secure_password'
});

async function runMigration() {
    try {
        console.log('–ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è employee_iin –≤ —Ç–∞–±–ª–∏—Ü—É users...');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É employee_iin
        await pool.query(`
            ALTER TABLE users 
            ADD COLUMN IF NOT EXISTS employee_iin VARCHAR(12)
        `);
        console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ employee_iin –¥–æ–±–∞–≤–ª–µ–Ω–∞');
        
        // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å
        await pool.query(`
            CREATE INDEX IF NOT EXISTS idx_users_employee_iin ON users(employee_iin)
        `);
        console.log('‚úÖ –ò–Ω–¥–µ–∫—Å –¥–ª—è employee_iin —Å–æ–∑–¥–∞–Ω');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
        const updateResult = await pool.query(`
            UPDATE users 
            SET employee_iin = e.iin
            FROM employees e 
            WHERE users.employee_number = e.table_number 
            AND users.employee_iin IS NULL
        `);
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updateResult.rowCount} –∑–∞–ø–∏—Å–µ–π —Å employee_iin`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        const tableInfo = await pool.query(`
            SELECT column_name, data_type, is_nullable
            FROM information_schema.columns 
            WHERE table_name = 'users' 
            ORDER BY ordinal_position
        `);
        
        console.log('\nüìã –¢–µ–∫—É—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã users:');
        tableInfo.rows.forEach(col => {
            console.log(`  - ${col.column_name}: ${col.data_type} (${col.is_nullable === 'YES' ? 'nullable' : 'not null'})`);
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        const userData = await pool.query('SELECT * FROM users ORDER BY id');
        console.log('\nüë• –¢–µ–∫—É—â–∏–µ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ users:');
        userData.rows.forEach(user => {
            console.log(`  - ID: ${user.id}, Telegram: ${user.telegram_user_id}, Employee Number: ${user.employee_number}, Employee IIN: ${user.employee_iin}, Role: ${user.role}`);
        });
        
        console.log('\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
    } finally {
        await pool.end();
    }
}

runMigration();