const axios = require('axios');

async function finalDepartmentTest() {
    try {
        console.log('=== –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π ===\n');
        
        console.log('üéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –¢–û–û Madlen Group...');
        
        // –ü–æ–ª—É—á–∞–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
        const orgsResponse = await axios.get('http://localhost:3030/api/admin/organizations');
        const madlenGroup = orgsResponse.data.find(org => org.object_company === '–¢–û–û Madlen Group');
        
        if (!madlenGroup) {
            console.log('‚ùå –¢–û–û Madlen Group –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return;
        }
        
        console.log(`‚úÖ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞: ${madlenGroup.object_company} (–ë–ò–ù: ${madlenGroup.object_bin})`);
        
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        const deptsResponse = await axios.get('http://localhost:3030/api/admin/departments');
        const allDepartments = deptsResponse.data;
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –¥–ª—è –¢–û–û Madlen Group
        const madlenDepartments = allDepartments.filter(dept => dept.object_bin === madlenGroup.object_bin);
        
        console.log(`\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π:`);
        console.log(`–í—Å–µ–≥–æ –≤ —Å–∏—Å—Ç–µ–º–µ: ${allDepartments.length}`);
        console.log(`–î–ª—è –¢–û–û Madlen Group: ${madlenDepartments.length}`);
        
        // –ò—â–µ–º Kitchen room –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        const kitchenRooms = madlenDepartments.filter(dept => 
            dept.object_name && dept.object_name.toLowerCase().includes('kitchen')
        );
        
        console.log(`\nüîç Kitchen room –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –≤ –¢–û–û Madlen Group:`);
        console.log(`–ù–∞–π–¥–µ–Ω–æ: ${kitchenRooms.length} –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π`);
        
        if (kitchenRooms.length > 0) {
            console.log('\n‚úÖ –°–ø–∏—Å–æ–∫ Kitchen room –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π:');
            kitchenRooms.forEach((dept, index) => {
                console.log(`  ${index + 1}. ${dept.object_name} (${dept.object_code})`);
            });
        } else {
            console.log('‚ùå Kitchen room –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã
        console.log('\nüéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö Kitchen room:');
        const specificKitchens = [
            '–ö–æ—Ñ–µ–π–Ω—è/–ü–∞–ª—É–±–∞/Kitchen room',
            '–†–µ—Å—Ç–æ—Ä–∞–Ω/–ü–∞–ª—É–±–∞/Kitchen room',
            '–ö–æ—Ñ–µ–π–Ω—è/–ú3/Kitchen room',
            'Kitchen room/–¶–µ—Ö/–ö—É—Ç–∞—Ä—ã—Å'
        ];
        
        specificKitchens.forEach(kitchenName => {
            const found = madlenDepartments.find(dept => dept.object_name === kitchenName);
            console.log(`  ${kitchenName}: ${found ? '‚úÖ –ù–∞–π–¥–µ–Ω–æ' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ'}`);
            if (found) {
                console.log(`    –ö–æ–¥: ${found.object_code}, –ë–ò–ù: ${found.object_bin}`);
            }
        });
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –ø–æ –§–û–¢ –¥–ª—è Kitchen room
        console.log('\nüìà –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –ø–æ –§–û–¢ –¥–ª—è Kitchen room...');
        
        const kitchenCode = kitchenRooms[0]?.object_code;
        if (kitchenCode) {
            console.log(`–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: ${kitchenRooms[0].object_name} (${kitchenCode})`);
            
            const payrollResponse = await axios.get('http://localhost:3030/api/admin/reports/payroll', {
                params: {
                    dateFrom: '2025-07-01',
                    dateTo: '2025-07-07',
                    department: kitchenCode
                }
            });
            
            if (payrollResponse.data.success) {
                const uniqueEmployees = new Set(payrollResponse.data.data.map(r => r.table_number));
                console.log(`‚úÖ –û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:`);
                console.log(`   –ó–∞–ø–∏—Å–µ–π: ${payrollResponse.data.data.length}`);
                console.log(`   –°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: ${uniqueEmployees.size}`);
                console.log(`   –°—É–º–º–∞: ${payrollResponse.data.summary.total} —Ç–µ–Ω–≥–µ`);
                
                if (uniqueEmployees.size > 0) {
                    console.log('\nüë• –ü—Ä–∏–º–µ—Ä—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:');
                    Array.from(uniqueEmployees).slice(0, 3).forEach(tableNum => {
                        const record = payrollResponse.data.data.find(r => r.table_number === tableNum);
                        console.log(`  ${record.full_name} (${tableNum})`);
                    });
                }
            } else {
                console.log(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç—á–µ—Ç–∞: ${payrollResponse.data.error}`);
            }
        } else {
            console.log('‚ùå –ù–µ—Ç Kitchen room –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞');
        }
        
        console.log('\nüèÜ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:');
        console.log(`‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`);
        console.log(`‚úÖ Kitchen room –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç (${kitchenRooms.length} —à—Ç—É–∫)`);
        console.log(`‚úÖ –û—Ç—á–µ—Ç –ø–æ –§–û–¢ –¥–ª—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è`);
        console.log(`‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞ - –≤—Å–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ`);
        
        console.log('\nüí° –ï—Å–ª–∏ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ Kitchen room –Ω–µ –≤–∏–¥–Ω—ã:');
        console.log('1. –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ (Ctrl+F5)');
        console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (F12) –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏');
        console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã–±—Ä–∞–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è "–¢–û–û Madlen Group"');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
    }
}

finalDepartmentTest();