const puppeteer = require('puppeteer');

async function testSchedulesFunctionality() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...');
    
    const browser = await puppeteer.launch({
        headless: true,
        args: ['--no-sandbox', '--disable-setuid-sandbox']
    });
    
    try {
        const page = await browser.newPage();
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        console.log('üìÑ –û—Ç–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
        await page.goto('http://localhost/test_schedules.html', { waitUntil: 'networkidle0' });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å–∫—Ä–∏–ø—Ç–æ–≤
        console.log('üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ admin.js...');
        const adminJsLoaded = await page.evaluate(() => {
            return typeof initSchedulesSection === 'function' && typeof openScheduleCard === 'function';
        });
        
        if (adminJsLoaded) {
            console.log('‚úÖ admin.js –∑–∞–≥—Ä—É–∂–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
        } else {
            console.log('‚ùå admin.js –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
            return;
        }
        
        // –¢–µ—Å—Ç API
        console.log('üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...');
        await page.click('button[onclick="testSchedulesAPI()"]');
        await page.waitForTimeout(2000);
        
        // –¢–µ—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤ DOM
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ DOM...');
        await page.click('button[onclick="testElementsExist()"]');
        await page.waitForTimeout(1000);
        
        // –¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        console.log('‚öôÔ∏è –¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ–∫—Ü–∏–∏...');
        await page.click('button[onclick="testInitSchedules()"]');
        await page.waitForTimeout(1000);
        
        // –¢–µ—Å—Ç –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
        console.log('üìã –¢–µ—Å—Ç –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞...');
        await page.click('button[onclick="testOpenCard()"]');
        await page.waitForTimeout(1000);
        
        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤
        const testResults = await page.$eval('#test-results', el => el.innerText);
        console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤:');
        console.log(testResults);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞
        const cardVisible = await page.$eval('#schedule-card-section', el => {
            return window.getComputedStyle(el).display !== 'none';
        });
        
        if (cardVisible) {
            console.log('‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–∞');
            
            // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
            await page.type('#schedule-card-name', '–ù–æ–≤—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –≥—Ä–∞—Ñ–∏–∫');
            await page.type('#schedule-card-description', '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞');
            await page.$eval('#schedule-card-check-in', el => el.value = '09:00');
            await page.$eval('#schedule-card-check-out', el => el.value = '18:00');
            
            console.log('‚úÖ –§–æ—Ä–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
            
            // –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞—Ç—ã
            await page.click('#add-work-date-btn');
            await page.waitForTimeout(500);
            
            const dateInputVisible = await page.$('#temp-date-input');
            if (dateInputVisible) {
                console.log('‚úÖ –ü–æ–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞—Ç—ã –ø–æ—è–≤–∏–ª–æ—Å—å');
                await page.type('#temp-date-input', '2025-06-10');
                await page.click('button[onclick="confirmAddDate()"]');
                await page.waitForTimeout(500);
                console.log('‚úÖ –î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
            } else {
                console.log('‚ùå –ü–æ–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞—Ç—ã –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å');
            }
            
        } else {
            console.log('‚ùå –ö–∞—Ä—Ç–æ—á–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞ –Ω–µ –æ—Ç–∫—Ä—ã–ª–∞—Å—å');
        }
        
        console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    } finally {
        await browser.close();
    }
}

testSchedulesFunctionality();