const db = require('./backend/database_pg');

async function fixTimezoneSimple() {
    try {
        console.log('üïê –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–æ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ time_events...\n');
        
        // –ü—Ä–æ—Å—Ç–æ–π –ø–æ–¥—Ö–æ–¥: —Å–¥–≤–∏–≥–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ 4 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
        // –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: GMT+2, –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è: UTC+6
        // GMT+2 –≤—Ä–µ–º—è –Ω–∞ 4 —á–∞—Å–∞ –±–æ–ª—å—à–µ —á–µ–º –Ω—É–∂–Ω–æ–µ –º–µ—Å—Ç–Ω–æ–µ –≤—Ä–µ–º—è
        // –ù–∞–ø—Ä–∏–º–µ—Ä: 09:04 –≤ –ë–î (–∫–∞–∫ GMT+2) –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 09:04 –º–µ—Å—Ç–Ω–æ–µ (UTC+6)
        // –î–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ë–î 09:04 - 2 —á–∞—Å–∞ = 07:04 UTC
        
        const result = await db.query(`
            UPDATE time_events 
            SET event_datetime = event_datetime - INTERVAL '4 hours'
            WHERE employee_number = '–ê–ü00-00231'
        `);
        
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${result.rowCount} –∑–∞–ø–∏—Å–µ–π`);
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const updatedEvents = await db.query(`
            SELECT event_datetime, event_type
            FROM time_events 
            WHERE employee_number = '–ê–ü00-00231'
            ORDER BY event_datetime
            LIMIT 5
        `);
        
        console.log('\n=== –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –î–ê–ù–ù–´–ï (–ø–µ—Ä–≤—ã–µ 5) ===');
        updatedEvents.rows.forEach((row, index) => {
            const localTime = new Date(row.event_datetime);
            console.log(`${index + 1}. ${localTime.toISOString().slice(0, 19).replace('T', ' ')} - –¢–∏–ø: ${row.event_type}`);
        });
        
        // –°—Ä–∞–≤–Ω–∏–º —Å API –¥–∞–Ω–Ω—ã–º–∏
        console.log('\n=== –°–†–ê–í–ù–ï–ù–ò–ï –° API ===');
        const apiData = [
            { "event_datetime": "2025-05-01 09:04:42", "event": "1" },
            { "event_datetime": "2025-05-01 19:16:13", "event": "2" },
            { "event_datetime": "2025-05-02 09:09:56", "event": "1" },
            { "event_datetime": "2025-05-02 09:39:53", "event": "1" },
            { "event_datetime": "2025-05-02 19:11:51", "event": "2" }
        ];
        
        apiData.forEach((item, index) => {
            const dbTime = new Date(updatedEvents.rows[index].event_datetime);
            const formattedDbTime = dbTime.toISOString().slice(0, 19).replace('T', ' ');
            
            console.log(`${index + 1}. API: ${item.event_datetime} | –ë–î: ${formattedDbTime} | –°–æ–≤–ø–∞–¥–∞–µ—Ç: ${item.event_datetime === formattedDbTime ? '‚úÖ' : '‚ùå'}`);
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    } finally {
        process.exit(0);
    }
}

fixTimezoneSimple();